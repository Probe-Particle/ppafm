[build-system]
requires = ["setuptools>=61.2"]
build-backend = "setuptools.build_meta"

[project]
name = "ppafm"
dynamic = ["version"]
description = "Classical force field model for simulating atomic force microscopy images."
authors = []
readme = "README.md"
license = {file = "LICENSE"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
]
requires-python = ">=3.8"
dependencies = [
    "matplotlib",
    "numpy",
    "pydantic",
    "toml",
]

[project.urls]
Homepage = "https://github.com/Probe-Particle/ProbeParticleModel"

[project.optional-dependencies]
opencl = [
    "pyopencl",
    "reikna",
    "ase",
    "PyQt5; platform_system=='Windows'"
]
dev = [
    "bumpver==2023.1124",
    "pre-commit",
    "pytest",
    "pytest-cov",
    "sphinx",
    "furo",
    "myst-parser"
]

[project.scripts]
ppafm-generate-elff = "ppafm.cli.generateElFF:main"
ppafm-generate-elff-point-charges = "ppafm.cli.generateElFF_point_charges:main"
ppafm-generate-ljff = "ppafm.cli.generateLJFF:main"
ppafm-generate-dftd3 = "ppafm.cli.generateDFTD3:main"
ppafm-conv-rho = "ppafm.cli.conv_rho:main"
ppafm-relaxed-scan = "ppafm.cli.relaxed_scan:main"
ppafm-plot-results = "ppafm.cli.plot_results:main"
ppafm-gui = "ppafm.cli.gui.ppafm_gui:main"

[tool.setuptools]
include-package-data = true
zip-safe = false
license-files = ["LICENSE"]

[tool.setuptools.packages]
find = {namespaces = false}

[tool.setuptools.dynamic]
version = {attr = "ppafm.version.__version__"}

[tool.bumpver]
current_version = "v0.4.0"
version_pattern = "vMAJOR.MINOR.PATCH[PYTAGNUM]"
commit_message = "Bump version {old_version} -> {new_version}"
commit = true
tag = true
push = true

[tool.bumpver.file_patterns]
"ppafm/version.py" = [
    '__version__ = "{pep440_version}"',
]
"doc/sphinx/source/conf.py" = [
    'version = "{pep440_version}"',
    '_year = YYYY'
]

[tool.cibuildwheel]
skip = ["pp*", "*-manylinux_i686", "*-musllinux*", '*-win32']

[tool.black]
line-length = 180
target-version = ['py37', 'py38', 'py39', 'py310', 'py311']
extend-exclude = "ppafm/dev"

[tool.pytest.ini_options]
testpaths = ["tests", "examples"]
python_files = ["test_*.py", "example_*.py"]
python_functions = ["test_*", "example_*"]
